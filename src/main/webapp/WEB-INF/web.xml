<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1"
         metadata-complete="true">
  <!--修改servlet版本为3.1,可从apache的example中复制-->
  <!--配置dispatchServlet-->
  <servlet>
    <servlet-name>seckill-dispatcher</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--
        配置springMVC需要加载的配置文件spring-dao.xml,spring-service.xml,spring-web.xml(即sprng-MVC.xml)
        整合顺序 mybatis->spring->springMVC
    -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring/spring-*.xml</param-value>
    </init-param>
    <load-on-startup>0</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>seckill-dispatcher</servlet-name>
    <!--默认匹配所有请求-->
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!-- 微信token缓存 -->
  <!--
  InitServlet 在web.xml中的配置与普通Servlet的配置有几点区别：
  1）通过配置<init-param>向Servlet中传入参数；
  2）通过配置<load-on-startup>使得Web服务器启动时就加载该Servlet；
  3）没有配置<servlet- mapping>，因为InitServlet并不对外提供访问。
  -->
  <!--<servlet>
    <servlet-name>initServlet</servlet-name>
    <servlet-class>org.servlet.InitServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>-->
</web-app>
